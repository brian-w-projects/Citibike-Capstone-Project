select(series_id, measurement_number, linear_acceleration_Z) %>%
mutate(rm = zoo::rollapply(linear_acceleration_Z, 5, mean, fill=NA)) %>%
filter(!is.na(rm)) %>%
filter(series_id == 0) %>%
select(-series_id) %>%
gather(key='key', value='value', -measurement_number) %>%
ggplot(aes(measurement_number, value, group=key, color=key)) +
geom_point() +
geom_line()
data %>%
select(series_id, measurement_number, linear_acceleration_Z) %>%
mutate(rm = zoo::rollapply(linear_acceleration_Z, 5, mean, fill=NA)) %>%
filter(!is.na(rm)) %>%
group_by(series_id) %>%
summarize(s = sum(abs(rm))) %>%
left_join(y) %>%
ggplot(aes(s)) +
geom_histogram() +
facet_wrap(~surface)
#filter(series_id == 0) %>%
#select(-series_id) %>%
#gather(key='key', value='value', -measurement_number) %>%
#ggplot(aes(measurement_number, value, group=key, color=key)) +
#geom_point() +
#geom_line()
data %>%
select(series_id, measurement_number, linear_acceleration_Y) %>%
mutate(rm = zoo::rollapply(linear_acceleration_Y, 5, mean, fill=NA)) %>%
filter(!is.na(rm)) %>%
group_by(series_id) %>%
summarize(s = sum(abs(rm))) %>%
left_join(y) %>%
ggplot(aes(s)) +
geom_histogram() +
facet_wrap(~surface)
#filter(series_id == 0) %>%
#select(-series_id) %>%
#gather(key='key', value='value', -measurement_number) %>%
#ggplot(aes(measurement_number, value, group=key, color=key)) +
#geom_point() +
#geom_line()
data %>%
select(series_id, measurement_number, linear_acceleration_X) %>%
mutate(rm = zoo::rollapply(linear_acceleration_X, 5, mean, fill=NA)) %>%
filter(!is.na(rm)) %>%
group_by(series_id) %>%
summarize(s = sum(abs(rm))) %>%
left_join(y) %>%
ggplot(aes(s)) +
geom_histogram() +
facet_wrap(~surface)
#filter(series_id == 0) %>%
#select(-series_id) %>%
#gather(key='key', value='value', -measurement_number) %>%
#ggplot(aes(measurement_number, value, group=key, color=key)) +
#geom_point() +
#geom_line()
data %>%
select(series_id, measurement_number, linear_acceleration_X) %>%
mutate(rm = zoo::rollapply(linear_acceleration_X, 5, mean, fill=NA)**2) %>%
filter(!is.na(rm)) %>%
group_by(series_id) %>%
summarize(s = sum(abs(rm))) %>%
left_join(y) %>%
ggplot(aes(s)) +
geom_histogram() +
facet_wrap(~surface)
#filter(series_id == 0) %>%
#select(-series_id) %>%
#gather(key='key', value='value', -measurement_number) %>%
#ggplot(aes(measurement_number, value, group=key, color=key)) +
#geom_point() +
#geom_line()
data %>%
select(series_id, measurement_number, linear_acceleration_X) %>%
mutate(rm = zoo::rollapply(linear_acceleration_X, 5, mean, fill=NA)) %>%
filter(!is.na(rm)) %>%
group_by(series_id) %>%
summarize(s = sum(abs(rm))) %>%
left_join(y) %>%
ggplot(aes(s)) +
geom_histogram() +
facet_wrap(~surface)
#filter(series_id == 0) %>%
#select(-series_id) %>%
#gather(key='key', value='value', -measurement_number) %>%
#ggplot(aes(measurement_number, value, group=key, color=key)) +
#geom_point() +
#geom_line()
data %>%
select(series_id, measurement_number, linear_acceleration_X) %>%
mutate(rm = zoo::rollapply(linear_acceleration_X, 5, mean, fill=NA)) %>%
filter(!is.na(rm)) %>%
group_by(series_id) %>%
summarize(s = sd(rm)) %>%
left_join(y) %>%
ggplot(aes(s)) +
geom_histogram() +
facet_wrap(~surface)
#filter(series_id == 0) %>%
#select(-series_id) %>%
#gather(key='key', value='value', -measurement_number) %>%
#ggplot(aes(measurement_number, value, group=key, color=key)) +
#geom_point() +
#geom_line()
data %>%
select(series_id, measurement_number, linear_acceleration_X) %>%
#mutate(rm = zoo::rollapply(linear_acceleration_X, 5, mean, fill=NA)) %>%
filter(!is.na(rm)) %>%
group_by(series_id) %>%
summarize(s = sd(linear_acceleration_X)) %>%
left_join(y) %>%
ggplot(aes(s)) +
geom_histogram() +
facet_wrap(~surface)
#filter(series_id == 0) %>%
#select(-series_id) %>%
#gather(key='key', value='value', -measurement_number) %>%
#ggplot(aes(measurement_number, value, group=key, color=key)) +
#geom_point() +
#geom_line()
data %>%
select(series_id, measurement_number, linear_acceleration_X) %>%
#mutate(rm = zoo::rollapply(linear_acceleration_X, 5, mean, fill=NA)) %>%
mutate(l = linear_acceleration_X - lead(linear_acceleration_X, 1)) %>%
head()
#filter(!is.na(rm)) %>%
#group_by(series_id) %>%
#summarize(s = sd(linear_acceleration_X)) %>%
#left_join(y) %>%
#ggplot(aes(s)) +
#geom_histogram() +
#facet_wrap(~surface)
#filter(series_id == 0) %>%
#select(-series_id) %>%
#gather(key='key', value='value', -measurement_number) %>%
#ggplot(aes(measurement_number, value, group=key, color=key)) +
#geom_point() +
#geom_line()
data %>%
select(series_id, measurement_number, linear_acceleration_X) %>%
#mutate(rm = zoo::rollapply(linear_acceleration_X, 5, mean, fill=NA)) %>%
mutate(l = lead(linear_acceleration_X, 1) - linear_acceleration_X) %>%
head()
#filter(!is.na(rm)) %>%
#group_by(series_id) %>%
#summarize(s = sd(linear_acceleration_X)) %>%
#left_join(y) %>%
#ggplot(aes(s)) +
#geom_histogram() +
#facet_wrap(~surface)
#filter(series_id == 0) %>%
#select(-series_id) %>%
#gather(key='key', value='value', -measurement_number) %>%
#ggplot(aes(measurement_number, value, group=key, color=key)) +
#geom_point() +
#geom_line()
data %>%
select(series_id, measurement_number, linear_acceleration_X) %>%
#mutate(rm = zoo::rollapply(linear_acceleration_X, 5, mean, fill=NA)) %>%
mutate(l = abs(lead(linear_acceleration_X, 1) - linear_acceleration_X)) %>%
head()
#filter(!is.na(rm)) %>%
#group_by(series_id) %>%
#summarize(s = sd(linear_acceleration_X)) %>%
#left_join(y) %>%
#ggplot(aes(s)) +
#geom_histogram() +
#facet_wrap(~surface)
#filter(series_id == 0) %>%
#select(-series_id) %>%
#gather(key='key', value='value', -measurement_number) %>%
#ggplot(aes(measurement_number, value, group=key, color=key)) +
#geom_point() +
#geom_line()
data %>%
select(series_id, measurement_number, linear_acceleration_X) %>%
#mutate(rm = zoo::rollapply(linear_acceleration_X, 5, mean, fill=NA)) %>%
mutate(l = abs(lead(linear_acceleration_X, 1) - linear_acceleration_X)) %>%
filter(measurement_number != 128) %>%
group_by(series_id) %>%
summarize(s = sum(l)) %>%
left_join(y) %>%
ggplot(aes(s)) +
geom_histogram() +
facet_wrap(~surface)
#filter(series_id == 0) %>%
#select(-series_id) %>%
#gather(key='key', value='value', -measurement_number) %>%
#ggplot(aes(measurement_number, value, group=key, color=key)) +
#geom_point() +
#geom_line()
data %>%
select(series_id, measurement_number, linear_acceleration_X) %>%
#mutate(rm = zoo::rollapply(linear_acceleration_X, 5, mean, fill=NA)) %>%
mutate(l = abs(lead(linear_acceleration_X, 1) - linear_acceleration_X)) %>%
filter(measurement_number != 128) %>%
group_by(series_id) %>%
summarize(s = sd(l)) %>%
left_join(y) %>%
ggplot(aes(s)) +
geom_histogram() +
facet_wrap(~surface)
#filter(series_id == 0) %>%
#select(-series_id) %>%
#gather(key='key', value='value', -measurement_number) %>%
#ggplot(aes(measurement_number, value, group=key, color=key)) +
#geom_point() +
#geom_line()
data %>%
select(series_id, measurement_number, linear_acceleration_X) %>%
#mutate(rm = zoo::rollapply(linear_acceleration_X, 5, mean, fill=NA)) %>%
mutate(l = lead(linear_acceleration_X, 1) - linear_acceleration_X) %>%
filter(measurement_number != 128) %>%
group_by(series_id) %>%
summarize(s = sd(l)) %>%
left_join(y) %>%
ggplot(aes(s)) +
geom_histogram() +
facet_wrap(~surface)
#filter(series_id == 0) %>%
#select(-series_id) %>%
#gather(key='key', value='value', -measurement_number) %>%
#ggplot(aes(measurement_number, value, group=key, color=key)) +
#geom_point() +
#geom_line()
data %>%
select(series_id, measurement_number, linear_acceleration_X) %>%
#mutate(rm = zoo::rollapply(linear_acceleration_X, 5, mean, fill=NA)) %>%
mutate(l = lead(linear_acceleration_Z, 1) - linear_acceleration_Z) %>%
filter(measurement_number != 128) %>%
group_by(series_id) %>%
summarize(s = sd(l)) %>%
left_join(y) %>%
ggplot(aes(s)) +
geom_histogram() +
facet_wrap(~surface)
data %>%
select(series_id, measurement_number, linear_acceleration_Z) %>%
#mutate(rm = zoo::rollapply(linear_acceleration_X, 5, mean, fill=NA)) %>%
mutate(l = lead(linear_acceleration_Z, 1) - linear_acceleration_Z) %>%
filter(measurement_number != 128) %>%
group_by(series_id) %>%
summarize(s = sd(l)) %>%
left_join(y) %>%
ggplot(aes(s)) +
geom_histogram() +
facet_wrap(~surface)
#filter(series_id == 0) %>%
#select(-series_id) %>%
#gather(key='key', value='value', -measurement_number) %>%
#ggplot(aes(measurement_number, value, group=key, color=key)) +
#geom_point() +
#geom_line()
data %>%
select(series_id, measurement_number, linear_acceleration_Z) %>%
#mutate(rm = zoo::rollapply(linear_acceleration_X, 5, mean, fill=NA)) %>%
mutate(l = lead(linear_acceleration_Z, 1) - linear_acceleration_Z) %>%
filter(measurement_number != 128) %>%
group_by(series_id) %>%
summarize(s = sd(l)) %>%
left_join(y) %>%
ggplot(aes(s, ..density..)) +
geom_histogram() +
facet_wrap(~surface)
#filter(series_id == 0) %>%
#select(-series_id) %>%
#gather(key='key', value='value', -measurement_number) %>%
#ggplot(aes(measurement_number, value, group=key, color=key)) +
#geom_point() +
#geom_line()
data %>%
select(series_id, measurement_number, angular_velocity_X) %>%
#mutate(rm = zoo::rollapply(linear_acceleration_X, 5, mean, fill=NA)) %>%
mutate(l = lead(angular_velocity_X, 1) - angular_velocity_X) %>%
filter(measurement_number != 128) %>%
group_by(series_id) %>%
summarize(s = sd(l)) %>%
left_join(y) %>%
ggplot(aes(s, ..density..)) +
geom_histogram() +
facet_wrap(~surface)
#filter(series_id == 0) %>%
#select(-series_id) %>%
#gather(key='key', value='value', -measurement_number) %>%
#ggplot(aes(measurement_number, value, group=key, color=key)) +
#geom_point() +
#geom_line()
data %>%
select(series_id, measurement_number, angular_velocity_X) %>%
#mutate(rm = zoo::rollapply(linear_acceleration_X, 5, mean, fill=NA)) %>%
mutate(l = lead(angular_velocity_X, 1) - angular_velocity_X) %>%
filter(measurement_number != 128) %>%
group_by(series_id) %>%
summarize(s = sum(l)) %>%
left_join(y) %>%
ggplot(aes(s, ..density..)) +
geom_histogram() +
facet_wrap(~surface)
#filter(series_id == 0) %>%
#select(-series_id) %>%
#gather(key='key', value='value', -measurement_number) %>%
#ggplot(aes(measurement_number, value, group=key, color=key)) +
#geom_point() +
#geom_line()
data %>%
select(series_id, measurement_number, angular_velocity_X) %>%
#mutate(rm = zoo::rollapply(linear_acceleration_X, 5, mean, fill=NA)) %>%
mutate(l = abs(lead(angular_velocity_X, 1) - angular_velocity_X)) %>%
filter(measurement_number != 128) %>%
group_by(series_id) %>%
summarize(s = sum(l)) %>%
left_join(y) %>%
ggplot(aes(s, ..density..)) +
geom_histogram() +
facet_wrap(~surface)
#filter(series_id == 0) %>%
#select(-series_id) %>%
#gather(key='key', value='value', -measurement_number) %>%
#ggplot(aes(measurement_number, value, group=key, color=key)) +
#geom_point() +
#geom_line()
data %>%
select(series_id, measurement_number, angular_velocity_X) %>%
#mutate(rm = zoo::rollapply(linear_acceleration_X, 5, mean, fill=NA)) %>%
mutate(l = lead(angular_velocity_X, 1) - angular_velocity_X) %>%
head()
#filter(measurement_number != 128) %>%
#group_by(series_id) %>%
#summarize(s = sum(l)) %>%
#left_join(y) %>%
#ggplot(aes(s, ..density..)) +
#geom_histogram() +
#facet_wrap(~surface)
#filter(series_id == 0) %>%
#select(-series_id) %>%
#gather(key='key', value='value', -measurement_number) %>%
#ggplot(aes(measurement_number, value, group=key, color=key)) +
#geom_point() +
#geom_line()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
raw.data <- readxl::read_excel('./StudentData.xlsx')
raw.data %>%
VIM::aggr(col=c('navyblue', 'yellow'),
numbers=TRUE, sortVars=TRUE,
labels=names(raw.data), cex.axis=.7,
gap=3, ylab=c('Missing Data', 'Pattern'), combined=TRUE
)
ph <- raw.data$PH
to.impute <- raw.data %>%
select(-PH)
View(ph)
imputed.data <- mice::mice(to.impute, m=5, maxit=10, seed=123, printFlag=FALSE)
View(to.impute)
dmy <- caret::dummyVars(" ~ .", data=to.impute)
View(dmy)
dmy <- data.frame(predict(caret::dummyVars(" ~ .", data=to.impute), newdata=to.impute))
?dummyVars
dmy <- caret::dummyVars(" ~ .", data=to.impute)
trsf <- data.frame(predict(dmy, newdata=to.impute))
dmy <- caret::dummyVars(" ~ `Brand Code`", data=to.impute)
trsf <- data.frame(predict(dmy, newdata=to.impute))
dmy <- caret::dummyVars(" ~ `Brand Code`", data=to.impute)
trsf <- predict(dmy, newdata=to.impute)
dmy <- caret::dummyVars(" ~ `Brand Code`", data=to.impute)
trsf <- predict(dmy, newdata=to.impute[1, ])
install.packages("mltools")
dmy <- mltools::one_hot(to.impute)
View(dmy)
ph <- raw.data$PH
to.impute <- raw.data %>%
select(-PH) %>%
mutate(`Brand Code` = as.factor(`Brand Code`))
dmy <- mltools::one_hot(to.impute)
View(to.impute)
dmy <- mltools::one_hot(to.impute$`Brand Code`)
View(dmy)
?one_hot
dmy <- mltools::one_hot(to.impute)
ph <- raw.data$PH
to.impute <- raw.data %>%
select(-PH) %>%
mutate(`Brand Code` = as.factor(`Brand Code`))
imputed.data <- mice::mice(to.impute, m=5, maxit=10, seed=123, printFlag=FALSE)
View(to.impute)
imputed.data <- mice::mice(to.impute[:, 1:], m=5, maxit=10, seed=123, printFlag=FALSE)
imputed.data <- mice::mice(to.impute[, 1:], m=5, maxit=10, seed=123, printFlag=FALSE)
imputed.data <- mice::mice(to.impute[, 1:10], m=5, maxit=10, seed=123, printFlag=FALSE)
to.impute <- to.impute %>%
select(-`Brand Code`)
imputed.data <- mice::mice(to.impute, m=5, maxit=10, seed=123, printFlag=FALSE)
ph <- raw.data$PH
to.impute <- raw.data %>%
select(-PH) %>%
mutate(`Brand Code` = as.factor(`Brand Code`))
?rename_all
to.impute <- to.impute %>%
rename_all(tolower)
View(to.impute)
names(to.impute)
clean <- function(name){
name <- regex::gsub('\\s', '', name)
name <- tolower(name)
return(name)
}
to.impute <- to.impute %>%
rename_all(funs(clean(.)))
clean <- function(name){
name <- gsub('\\s', '', name)
name <- tolower(name)
return(name)
}
to.impute <- to.impute %>%
rename_all(funs(clean(.)))
View(to.impute)
imputed.data <- mice::mice(to.impute, m=5, maxit=10, seed=123, printFlag=FALSE)
completed.data <- cbind(ph, complete(imputed.data, 1))
View(imputed.data)
imputed.data <- mice::mice(to.impute, m=5, maxit=10, seed=123, printFlag=FALSE)
completed.data <- cbind(ph, complete(imputed.data, 1))
complete(imputed.data, 1)
mice::complete(imputed.data, 1)
imputed.data <- mice::mice(to.impute, m=5, maxit=10, seed=123, printFlag=FALSE)
completed.data <- cbind(ph, mice::complete(imputed.data, 1))
View(completed.data)
completed.data %>%
VIM::aggr(col=c('navyblue', 'yellow'),
numbers=TRUE, sortVars=TRUE,
labels=names(raw.data), cex.axis=.7,
gap=3, ylab=c('Missing Data', 'Pattern'), combined=TRUE
)
View(completed.data)
completed.data %>%
filter(!complete.cases(.))
completed.data %>%
VIM::aggr(col=c('navyblue', 'yellow'),
numbers=TRUE, sortVars=TRUE,
labels=names(completed.data), cex.axis=.7,
gap=3, ylab=c('Missing Data', 'Pattern'), combined=TRUE
)
completed.data <- completed.data %>%
filter(complete.cases(.))
completed.data %>%
VIM::aggr(col=c('navyblue', 'yellow'),
numbers=TRUE, sortVars=TRUE,
labels=names(completed.data), cex.axis=.7,
gap=3, ylab=c('Missing Data', 'Pattern'), combined=TRUE
)
completed.data %>%
write_csv('data.csv')
View(completed.data)
completed.data %>%
ggplot(aes(ph)) +
geom_histogram()
completed.data %>%
ggplot(aes(ph)) +
geom_histogram(bins=40)
completed.data %>%
ggplot(aes(ph)) +
geom_histogram(bins=50)
completed.data %>%
ggplot(aes(ph)) +
geom_histogram(bins=30)
View(completed.data)
completed.data %>%
corrplot::corrplot()
completed.data %>%
corr() %>%
corrplot::corrplot()
completed.data %>%
cor() %>%
corrplot::corrplot(method='circle')
completed.data %>%
select(-brandcode) %>%
cor() %>%
corrplot::corrplot(method='circle')
source('D:/GradClasses/Spring19/698/citibike-dashboard/graph/map.R', echo=TRUE)
setwd('D:\\GradClasses\\Spring19\\698\\citibike-dashboard\\graph\\')
source('D:/GradClasses/Spring19/698/citibike-dashboard/graph/map.R', echo=TRUE)
View(core1)
?borders
source('D:/GradClasses/Spring19/698/citibike-dashboard/graph/map.R', echo=TRUE)
help(package='maps')
install.packages("tigris")
install.packages("leaflet")
install.packages("sp")
install.packages("ggmap")
install.packages("maptools")
install.packages("httr")
install.packages("rgdal")
source('D:/GradClasses/Spring19/698/citibike-dashboard/graph/map.R', echo=TRUE)
source('D:/GradClasses/Spring19/698/citibike-dashboard/graph/map.R', echo=TRUE)
?register_google
?get_map
?register_google
source('D:/GradClasses/Spring19/698/citibike-dashboard/graph/map.R', echo=TRUE)
ggmap(nyc_map)
nyc_map %>%
leaflet() %>%
addMarkers(~lon, ~lat, data=core1)
nyc_map %>%
leaflet()
nyc_map %>%
leaflet() %>%
addMarkers(~lon, ~lat, data=core1) %>%
addProviderTiles("CartoDB.Positron")
core2 <- read_csv('core2.csv')
nyc_map %>%
leaflet() %>%
addMarkers(~lon, ~lat, data=core2) %>%
addProviderTiles("CartoDB.Positron")
